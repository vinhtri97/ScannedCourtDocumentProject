{"ast":null,"code":"import _toConsumableArray from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\src\\\\WebPages\\\\UploadDocumentPage.jsx\";\nimport React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\n\nvar UpLoadDocumentPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpLoadDocumentPage, _Component);\n\n  function UpLoadDocumentPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpLoadDocumentPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpLoadDocumentPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uploadFile: null\n    };\n\n    _this.fileChangeHandler = function (event) {\n      //console.log(event.target.files[0]);\n      _this.setState({\n        uploadFile: event.target.files[0],\n        pageNumber: 1,\n        numPages: null\n      });\n    };\n\n    _this.uploadButton = function () {\n      if (_this.state.uploadFile) return React.createElement(\"button\", {\n        className: \"d-block btn btn-sm mt-4 btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Upload Document\");else return React.createElement(\"div\", {\n        className: \"d-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    };\n\n    _this.errorHandler = function (error) {\n      console.log(error.message);\n    };\n\n    _this.onDocumentLoadSuccess = function (_ref) {\n      var numPages = _ref.numPages;\n      console.log(numPages);\n\n      _this.setState({\n        numPages: numPages\n      });\n    };\n\n    _this.generatePageNumber = function () {\n      return _toConsumableArray(Array(_this.state.numPages).keys()).map(function (pageNumber) {\n        return React.createElement(Page, {\n          pageNumber: pageNumber + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UpLoadDocumentPage, [{\n    key: \"render\",\n    value: function render() {\n      {}\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4 bg-light mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.fileChangeHandler,\n        className: \"d-block text-success \",\n        accept: \"application/pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), this.uploadButton()), React.createElement(\"div\", {\n        className: \"col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Document, {\n        file: this.state.uploadFile,\n        onLoadSuccess: this.onDocumentLoadSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Page, {\n        pageNumber: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"d-block text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Previous\"), React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Nextpage\")))));\n    }\n  }]);\n\n  return UpLoadDocumentPage;\n}(Component);\n\nexport default UpLoadDocumentPage;","map":{"version":3,"sources":["D:\\TAMUCC\\Spring2019\\SeniorCapstone\\Project\\scanned_court_document_\\src\\WebPages\\UploadDocumentPage.jsx"],"names":["React","Component","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","UpLoadDocumentPage","state","uploadFile","fileChangeHandler","event","setState","target","files","pageNumber","numPages","uploadButton","errorHandler","error","console","log","message","onDocumentLoadSuccess","generatePageNumber","Array","keys","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { pdfjs } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\nclass UpLoadDocumentPage extends Component {\r\n    state = { \r\n        uploadFile:null\r\n     }\r\n    fileChangeHandler = (event) =>{\r\n        //console.log(event.target.files[0]);\r\n        this.setState({\r\n            uploadFile:event.target.files[0],\r\n            pageNumber: 1,\r\n            numPages:null\r\n        });\r\n    }\r\n    uploadButton = () => {\r\n        if (this.state.uploadFile)\r\n            return(\r\n                <button className=\"d-block btn btn-sm mt-4 btn-info\">Upload Document</button>\r\n            )\r\n        else\r\n            return <div className=\"d-block\"></div>\r\n    }\r\n    errorHandler = (error) =>{\r\n        console.log(error.message);\r\n    }\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        console.log(numPages);\r\n        this.setState({ numPages });\r\n    }\r\n    generatePageNumber = () =>{\r\n        return [...Array(this.state.numPages).keys()].map(pageNumber => <Page pageNumber={pageNumber+1}></Page>)\r\n    }\r\n    render() { \r\n        {}\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 bg-light mt-5\">\r\n                        <input type=\"file\" onChange={this.fileChangeHandler} className=\"d-block text-success \" accept=\"application/pdf\"></input>\r\n                        {this.uploadButton()}\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <Document \r\n                            file={this.state.uploadFile}\r\n                            onLoadSuccess={this.onDocumentLoadSuccess}\r\n                        >\r\n                            {/* {this.generatePageNumber()} */}\r\n                            <Page pageNumber={1}></Page>\r\n                        </Document>\r\n                        <div className=\"d-block text-center\">\r\n                            <button className=\"btn btn-sm btn-info\">Previous</button>\r\n                            <button className=\"btn btn-sm btn-info\">Nextpage</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UpLoadDocumentPage;"]},"metadata":{},"sourceType":"module"}