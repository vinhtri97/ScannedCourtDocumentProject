{"ast":null,"code":"import _classCallCheck from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\src\\\\WebPages\\\\UploadDocumentPage.jsx\";\nimport React, { Component } from 'react';\nimport PdfContent from '../Components/PdfContent';\n\nvar UpLoadDocumentPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpLoadDocumentPage, _Component);\n\n  function UpLoadDocumentPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpLoadDocumentPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpLoadDocumentPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uploadFile: null,\n      computerVision: true\n    };\n\n    _this.fileChangeHandler = function (event) {\n      _this.setState({\n        uploadFile: event.target.files[0],\n        pageNumber: 1,\n        numPages: null\n      });\n    };\n\n    _this.onDocumentLoadSuccess = function (_ref) {\n      var numPages = _ref.numPages;\n\n      _this.setState({\n        numPages: numPages\n      });\n    };\n\n    _this.nextBtnHandler = function (e) {\n      _this.state.pageNumber < _this.state.numPages && _this.setState({\n        pageNumber: _this.state.pageNumber + 1\n      });\n      e.preventDefault();\n    };\n\n    _this.previousBtnHandler = function (e) {\n      _this.state.pageNumber > 1 && _this.setState({\n        pageNumber: _this.state.pageNumber - 1\n      });\n      e.preventDefault();\n    };\n\n    _this.radioBtnHandler = function (e) {\n      var name = e.target.name;\n      if (name === \"computerVision\") _this.setState({\n        computerVision: true\n      });else _this.setState({\n        computerVision: false\n      });\n    };\n\n    _this.onFormSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"gohere to on submit\");\n      var formData = new FormData();\n      formData.append('myImage', _this.state.uploadFile);\n\n      if (_this.state.computerVision) {\n        fetch('/uploadDocument', {\n          method: 'POST',\n          body: formData\n        }).then(function (res) {\n          return res.json;\n        }).then(function (result) {\n          console.log(result);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else _this.props.history.push({\n        pathname: '/manual_upload',\n        state: {\n          uploadFile: _this.state.uploadFile\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UpLoadDocumentPage, [{\n    key: \"render\",\n    value: function render() {\n      {}\n      return React.createElement(\"div\", {\n        className: \"container bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4 mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.fileChangeHandler,\n        className: \"d-block text-success \",\n        accept: \"application/pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), this.state.uploadFile != null && React.createElement(\"form\", {\n        className: \"mt-5\",\n        onChange: this.radioBtnHandler,\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"computerVision\",\n        checked: this.state.computerVision,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \"Computer Vision\"), React.createElement(\"label\", {\n        className: \"d-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"manualTyping\",\n        checked: !this.state.computerVision,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"Manual Typing\"), React.createElement(\"button\", {\n        className: \"d-block btn btn-sm mt-4 btn-info\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Upload Document\"))), React.createElement(\"div\", {\n        className: \"col-8 mt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(PdfContent, {\n        uploadFile: this.state.uploadFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UpLoadDocumentPage;\n}(Component);\n\nexport default UpLoadDocumentPage;","map":{"version":3,"sources":["D:\\TAMUCC\\Spring2019\\SeniorCapstone\\Project\\scanned_court_document_\\src\\WebPages\\UploadDocumentPage.jsx"],"names":["React","Component","PdfContent","UpLoadDocumentPage","state","uploadFile","computerVision","fileChangeHandler","event","setState","target","files","pageNumber","numPages","onDocumentLoadSuccess","nextBtnHandler","e","preventDefault","previousBtnHandler","radioBtnHandler","name","onFormSubmit","console","log","formData","FormData","append","fetch","method","body","then","res","json","result","catch","err","props","history","push","pathname"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;IACMC,kB;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAC,IADP;AAEJC,MAAAA,cAAc,EAAC;AAFX,K;;UAIRC,iB,GAAoB,UAACC,KAAD,EAAU;AAC1B,YAAKC,QAAL,CAAc;AACVJ,QAAAA,UAAU,EAACG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CADD;AAEVC,QAAAA,UAAU,EAAE,CAFF;AAGVC,QAAAA,QAAQ,EAAC;AAHC,OAAd;AAKH,K;;UACDC,qB,GAAwB,gBAAkB;AAAA,UAAfD,QAAe,QAAfA,QAAe;;AACtC,YAAKJ,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACH,K;;UACDE,c,GAAiB,UAACC,CAAD,EAAM;AACnB,YAAKZ,KAAL,CAAWQ,UAAX,GAAwB,MAAKR,KAAL,CAAWS,QAAnC,IACI,MAAKJ,QAAL,CAAc;AACVG,QAAAA,UAAU,EAAE,MAAKR,KAAL,CAAWQ,UAAX,GAAsB;AADxB,OAAd,CADJ;AAIAI,MAAAA,CAAC,CAACC,cAAF;AACH,K;;UACDC,kB,GAAqB,UAACF,CAAD,EAAM;AACvB,YAAKZ,KAAL,CAAWQ,UAAX,GAAwB,CAAxB,IACI,MAAKH,QAAL,CAAc;AACVG,QAAAA,UAAU,EAAE,MAAKR,KAAL,CAAWQ,UAAX,GAAsB;AADxB,OAAd,CADJ;AAIAI,MAAAA,CAAC,CAACC,cAAF;AACH,K;;UACDE,e,GAAkB,UAACH,CAAD,EAAM;AAAA,UACbI,IADa,GACLJ,CAAC,CAACN,MADG,CACbU,IADa;AAEpB,UAAIA,IAAI,KAAK,gBAAb,EACI,MAAKX,QAAL,CAAc;AACVH,QAAAA,cAAc,EAAC;AADL,OAAd,EADJ,KAKI,MAAKG,QAAL,CAAc;AACVH,QAAAA,cAAc,EAAC;AADL,OAAd;AAGP,K;;UACDe,Y,GAAe,UAACb,KAAD,EAAU;AACrBA,MAAAA,KAAK,CAACS,cAAN;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,MAAKtB,KAAL,CAAWC,UAArC;;AACA,UAAI,MAAKD,KAAL,CAAWE,cAAf,EAA8B;AAC1BqB,QAAAA,KAAK,CAAC,iBAAD,EAAoB;AACrBC,UAAAA,MAAM,EAAE,MADa;AAErBC,UAAAA,IAAI,EAAEL;AAFe,SAApB,CAAL,CAICM,IAJD,CAIM,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAR;AAAA,SAJT,EAKCF,IALD,CAKM,UAAAG,MAAM,EAAI;AAACX,UAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AAAoB,SALrC,EAMCC,KAND,CAMO,UAAAC,GAAG,EAAI;AAACb,UAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AAAiB,SANhC;AAQH,OATD,MAWI,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,gBADU;AAEpBnC,QAAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,MAAKD,KAAL,CAAWC;AAAvB;AAFa,OAAxB;AAIP,K;;;;;;;6BACQ;AACL,OAAE;AACF,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKE,iBAAlC;AAAqD,QAAA,SAAS,EAAC,uBAA/D;AAAuF,QAAA,MAAM,EAAC,iBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGQ,KAAKH,KAAL,CAAWC,UAAX,IAAyB,IAAzB,IACA;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKc,eAAtC;AAAuD,QAAA,QAAQ,EAAE,KAAKE,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,gBAAzB;AAA0C,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWE,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,oBADJ,EAEI;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,cAAzB;AAAwC,QAAA,OAAO,EAAE,CAAC,KAAKF,KAAL,CAAWE,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,kBAFJ,EAGI;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CAJR,CADJ,EAaI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAI,KAAKF,KAAL,CAAWC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAbJ,CADJ,CADJ;AAqBH;;;;EApF4BJ,S;;AAuFjC,eAAeE,kBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PdfContent from '../Components/PdfContent'\r\nclass UpLoadDocumentPage extends Component {\r\n    state = { \r\n        uploadFile:null,\r\n        computerVision:true,\r\n     }\r\n    fileChangeHandler = (event) =>{\r\n        this.setState({\r\n            uploadFile:event.target.files[0],\r\n            pageNumber: 1,\r\n            numPages:null\r\n        });\r\n    }\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n    }\r\n    nextBtnHandler = (e) =>{\r\n        this.state.pageNumber < this.state.numPages &&\r\n            this.setState({\r\n                pageNumber: this.state.pageNumber+1\r\n            })\r\n        e.preventDefault();\r\n    }\r\n    previousBtnHandler = (e) =>{\r\n        this.state.pageNumber > 1 && \r\n            this.setState({\r\n                pageNumber: this.state.pageNumber-1\r\n            })\r\n        e.preventDefault();\r\n    }\r\n    radioBtnHandler = (e) =>{\r\n        const {name} = e.target;\r\n        if (name === \"computerVision\")\r\n            this.setState({\r\n                computerVision:true\r\n            })\r\n        else\r\n            this.setState({\r\n                computerVision:false\r\n            })\r\n    }\r\n    onFormSubmit = (event) =>{       \r\n        event.preventDefault();\r\n        console.log(\"gohere to on submit\");\r\n        const formData = new FormData();\r\n        formData.append('myImage',this.state.uploadFile);\r\n        if (this.state.computerVision){\r\n            fetch('/uploadDocument', {\r\n                method: 'POST',\r\n                body: formData      \r\n            })\r\n            .then(res => res.json)\r\n            .then(result => {console.log(result)})\r\n            .catch(err => {console.log(err)}\r\n            )\r\n        }   \r\n        else\r\n            this.props.history.push({\r\n                pathname: '/manual_upload',\r\n                state: {uploadFile:this.state.uploadFile}\r\n            });\r\n    }\r\n    render() { \r\n        {}\r\n        return ( \r\n            <div className=\"container bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 mt-5\">\r\n                        <input type=\"file\" onChange={this.fileChangeHandler} className=\"d-block text-success \" accept=\"application/pdf\"></input>\r\n                        {\r\n                            this.state.uploadFile != null && \r\n                            <form className=\"mt-5\" onChange={this.radioBtnHandler} onSubmit={this.onFormSubmit}>\r\n                                <label className=\"d-block\"><input type=\"radio\" name=\"computerVision\" checked={this.state.computerVision}></input>Computer Vision</label>\r\n                                <label className=\"d-block\"><input type=\"radio\" name=\"manualTyping\" checked={!this.state.computerVision}></input>Manual Typing</label>\r\n                                <button className=\"d-block btn btn-sm mt-4 btn-info\" type=\"submit\">Upload Document</button>\r\n                            </form>\r\n                                \r\n                        }\r\n                    </div>\r\n                    <div className=\"col-8 mt-0\">\r\n                        <PdfContent uploadFile = {this.state.uploadFile}></PdfContent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UpLoadDocumentPage;"]},"metadata":{},"sourceType":"module"}