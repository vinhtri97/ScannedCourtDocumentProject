{"ast":null,"code":"'use strict';\n\nvar nodeUtil = require(\"util\");\n\nvar PDFUnit = function PFPUnitClosure() {\n  'use strict'; // private static\n\n  var _nextId = 1;\n  var _name = 'PDFUnit';\n  var dpi = 96.0;\n  var gridXPerInch = 4.0;\n  var gridYPerInch = 4.0;\n\n  var _pixelXPerGrid = dpi / gridXPerInch;\n\n  var _pixelYPerGrid = dpi / gridYPerInch;\n\n  var _pixelPerPoint = dpi / 72;\n\n  var kColors = ['#000000', // 0\n  '#ffffff', // 1\n  '#4c4c4c', // 2\n  '#808080', // 3\n  '#999999', // 4\n  '#c0c0c0', // 5\n  '#cccccc', // 6\n  '#e5e5e5', // 7\n  '#f2f2f2', // 8\n  '#008000', // 9\n  '#00ff00', // 10\n  '#bfffa0', // 11\n  '#ffd629', // 12\n  '#ff99cc', // 13\n  '#004080', // 14\n  '#9fc0e1', // 15\n  '#5580ff', // 16\n  '#a9c9fa', // 17\n  '#ff0080', // 18\n  '#800080', // 19\n  '#ffbfff', // 20\n  '#e45b21', // 21\n  '#ffbfaa', // 22\n  '#008080', // 23\n  '#ff0000', // 24\n  '#fdc59f', // 25\n  '#808000', // 26\n  '#bfbf00', // 27\n  '#824100', // 28\n  '#007256', // 29\n  '#008000', // 30\n  '#000080', // Last + 1\n  '#008080', // Last + 2\n  '#800080', // Last + 3\n  '#ff0000', // Last + 4\n  '#0000ff', // Last + 5\n  '#008000', // Last + 6\n  '#000000' // Last + 7\n  ]; // constructor\n\n  var cls = function cls() {\n    // private\n    var _id = _nextId++; // public (every instance will have their own copy of these methods, needs to be lightweight)\n\n\n    this.get_id = function () {\n      return _id;\n    };\n\n    this.get_name = function () {\n      return _name + _id;\n    };\n  };\n\n  cls.toFixedFloat = function (fNum) {\n    return parseFloat(fNum.toFixed(3));\n  };\n\n  cls.colorCount = function () {\n    return kColors.length;\n  };\n\n  cls.toPixelX = function (formX) {\n    return Math.round(formX * _pixelXPerGrid);\n  };\n\n  cls.toPixelY = function (formY) {\n    return Math.round(formY * _pixelYPerGrid);\n  };\n\n  cls.pointToPixel = function (point) {\n    // Point unit (1/72 an inch) to pixel units\n    return point * _pixelPerPoint;\n  };\n\n  cls.getColorByIndex = function (clrId) {\n    return kColors[clrId];\n  };\n\n  cls.toFormPoint = function (viewportX, viewportY) {\n    return [viewportX / _pixelXPerGrid, viewportY / _pixelYPerGrid];\n  };\n\n  cls.toFormX = function (viewportX) {\n    return cls.toFixedFloat(viewportX / _pixelXPerGrid);\n  };\n\n  cls.toFormY = function (viewportY) {\n    return cls.toFixedFloat(viewportY / _pixelYPerGrid);\n  };\n\n  cls.findColorIndex = function (color) {\n    if (color.length === 4) color += \"000\"; //MQZ. 07/29/2013: if color is not in dictionary, just return -1. The caller (pdffont, pdffill) will set the actual color\n\n    return kColors.indexOf(color);\n  };\n\n  return cls;\n}();\n\nmodule.exports = PDFUnit;","map":null,"metadata":{},"sourceType":"script"}