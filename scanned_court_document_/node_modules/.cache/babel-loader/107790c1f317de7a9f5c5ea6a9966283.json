{"ast":null,"code":"import _classCallCheck from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\src\\\\HomePage\\\\PdfPreview.jsx\";\nimport React, { Component } from 'react';\n\nvar PdfPreviewCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PdfPreviewCard, _Component);\n\n  function PdfPreviewCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PdfPreviewCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PdfPreviewCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: new Image()\n    };\n    return _this;\n  }\n\n  _createClass(PdfPreviewCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/RecentlyPDF\").then(function (res) {\n        return res.blob();\n      }).then(function (result) {\n        _this2.setState({\n          image: result\n        });\n\n        console.log(result);\n      });\n      var canvas = this.refs.canvas;\n      var ctx = canvas.getContext(\"2d\");\n      var img = this.state.image;\n      img.src = pdfImg;\n\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"card d-inline-block\",\n        style: {\n          width: '18rem',\n          marginLeft: '5%',\n          marginTop: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        className: \"card-img-top\",\n        alt: \"Card image cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Card title\"), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(\"a\", {\n        href: \"/\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Go somewhere\")));\n    }\n  }]);\n\n  return PdfPreviewCard;\n}(Component);\n\nvar pdfImg = require(\"../Resources/pdf.jpg\");\n\nexport default PdfPreviewCard;","map":{"version":3,"sources":["D:\\TAMUCC\\Spring2019\\SeniorCapstone\\Project\\scanned_court_document_\\src\\HomePage\\PdfPreview.jsx"],"names":["React","Component","PdfPreviewCard","state","image","Image","fetch","then","res","blob","result","setState","console","log","canvas","refs","ctx","getContext","img","src","pdfImg","onload","drawImage","width","height","marginLeft","marginTop","require"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IACMC,c;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAG,IAAIC,KAAJ;AADJ,K;;;;;;wCAGW;AAAA;;AACfC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAGQ,UAACG,MAAD,EAAW;AACP,QAAA,MAAI,CAACC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAACM;AAAP,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,OANT;AAQA,UAAMI,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,UAAME,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,GAAG,GAAG,KAAKf,KAAL,CAAWC,KAAvB;AACAc,MAAAA,GAAG,CAACC,GAAJ,GAAUC,MAAV;;AACAF,MAAAA,GAAG,CAACG,MAAJ,GAAa,YAAK;AACdL,QAAAA,GAAG,CAACM,SAAJ,CAAcJ,GAAd,EAAkB,CAAlB,EAAoB,CAApB,EAAsBA,GAAG,CAACK,KAA1B,EAAgCL,GAAG,CAACM,MAApC,EAA2C,CAA3C,EAA6C,CAA7C,EAA+CV,MAAM,CAACS,KAAtD,EAA4DT,MAAM,CAACU,MAAnE;AACH,OAFD;AAGH;;;6BACQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAE,OAAR;AAAgBE,UAAAA,UAAU,EAAC,IAA3B;AAAgCC,UAAAA,SAAS,EAAC;AAA1C,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAA8C,QAAA,GAAG,EAAC,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAFJ,EAGI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CAFJ,CADJ;AAUH;;;;EAhCwBzB,S;;AAkC7B,IAAMmB,MAAM,GAAGO,OAAO,CAAC,sBAAD,CAAtB;;AACA,eAAezB,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass PdfPreviewCard extends Component {\r\n    state = {\r\n        image : new Image()\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"/RecentlyPDF\")\r\n            .then(res => res.blob())\r\n            .then(\r\n                (result) =>{\r\n                    this.setState({image:result})\r\n                    console.log(result);\r\n                }\r\n            )\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const img = this.state.image;\r\n        img.src = pdfImg;\r\n        img.onload = () =>{\r\n            ctx.drawImage(img,0,0,img.width,img.height,0,0,canvas.width,canvas.height);\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"card d-inline-block\" style={{width: '18rem',marginLeft:'5%',marginTop:'2%'}}>\r\n                <canvas ref=\"canvas\" className=\"card-img-top\" alt=\"Card image cap\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Card title</h5>\r\n                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                    <a href=\"/\" className=\"btn btn-primary\">Go somewhere</a>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst pdfImg = require(\"../Resources/pdf.jpg\")\r\nexport default PdfPreviewCard;"]},"metadata":{},"sourceType":"module"}