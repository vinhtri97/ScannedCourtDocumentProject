{"ast":null,"code":"import _classCallCheck from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\TAMUCC\\\\Spring2019\\\\SeniorCapstone\\\\Project\\\\scanned_court_document_\\\\src\\\\WebPages\\\\UploadDocumentPage.jsx\";\nimport React, { Component } from 'react';\nimport PdfContent from '../Components/PdfContent';\n\nvar UpLoadDocumentPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpLoadDocumentPage, _Component);\n\n  function UpLoadDocumentPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpLoadDocumentPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpLoadDocumentPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uploadFile: null,\n      pageNumber: 1,\n      numPages: null,\n      documentType: 'Criminal'\n    };\n\n    _this.fileChangeHandler = function (event) {\n      _this.setState({\n        uploadFile: event.target.files[0],\n        pageNumber: 1,\n        numPages: null\n      });\n    };\n\n    _this.onFormSubmit = function (event) {\n      event.preventDefault(); // const formData = new FormData();\n      // formData.append('pdfUpload', this.state.uploadFile);\n      // formData.append('documentType', this.state.documentType);\n      // fetch('/uploadDocument', {\n      //     method: 'POST',\n      //     body: formData\n      // })\n      // .then(response =>{\n      //     alert(\"Your pdf was uploaded to database successfully\");\n      //     this.props.history.push({\n      //         pathname: '/manual_upload',\n      //         state: { \n      //             uploadFile: this.state.uploadFile,\n      //             documentType: this.state.documentType\n      //         }\n      //     });\n      // })\n      // .catch(err => { console.log(err) } )    \n\n      _this.props.history.push({\n        pathname: '/manual_upload',\n        state: {\n          uploadFile: _this.state.uploadFile,\n          documentType: _this.state.documentType\n        }\n      });\n    };\n\n    _this.selectOnChangeHandler = function (e) {\n      _this.setState({\n        documentType: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UpLoadDocumentPage, [{\n    key: \"render\",\n    value: function render() {\n      {}\n      return React.createElement(\"div\", {\n        className: \"container bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onChange: this.radioBtnHandler,\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.fileChangeHandler,\n        name: \"pdfUpload\",\n        className: \"d-block text-success \",\n        accept: \"application/pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), this.state.uploadFile != null && React.createElement(\"div\", {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"documentType\",\n        value: this.state.documentType,\n        onChange: this.selectOnChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Civil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Civil\"), React.createElement(\"option\", {\n        value: \"Criminal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Criminal\")), React.createElement(\"button\", {\n        className: \"d-block btn btn-sm mt-4 btn-info\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Upload Document\")))), React.createElement(\"div\", {\n        className: \"col-8 mt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(PdfContent, {\n        uploadFile: this.state.uploadFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UpLoadDocumentPage;\n}(Component);\n\nexport default UpLoadDocumentPage;","map":{"version":3,"sources":["D:\\TAMUCC\\Spring2019\\SeniorCapstone\\Project\\scanned_court_document_\\src\\WebPages\\UploadDocumentPage.jsx"],"names":["React","Component","PdfContent","UpLoadDocumentPage","state","uploadFile","pageNumber","numPages","documentType","fileChangeHandler","event","setState","target","files","onFormSubmit","preventDefault","props","history","push","pathname","selectOnChangeHandler","e","value","radioBtnHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PdfContent from '../Components/PdfContent'\r\nclass UpLoadDocumentPage extends Component {\r\n    state = {\r\n        uploadFile: null,\r\n        pageNumber: 1,\r\n        numPages: null,\r\n        documentType: 'Criminal'\r\n    }\r\n    fileChangeHandler = (event) => {\r\n        this.setState({\r\n            uploadFile: event.target.files[0],\r\n            pageNumber: 1,\r\n            numPages: null\r\n        });\r\n    }\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        // const formData = new FormData();\r\n        // formData.append('pdfUpload', this.state.uploadFile);\r\n        // formData.append('documentType', this.state.documentType);\r\n        // fetch('/uploadDocument', {\r\n        //     method: 'POST',\r\n        //     body: formData\r\n        // })\r\n        // .then(response =>{\r\n        //     alert(\"Your pdf was uploaded to database successfully\");\r\n        //     this.props.history.push({\r\n        //         pathname: '/manual_upload',\r\n        //         state: { \r\n        //             uploadFile: this.state.uploadFile,\r\n        //             documentType: this.state.documentType\r\n        //         }\r\n        //     });\r\n        // })\r\n        // .catch(err => { console.log(err) } )    \r\n\r\n        this.props.history.push({\r\n                    pathname: '/manual_upload',\r\n                    state: { \r\n                        uploadFile: this.state.uploadFile,\r\n                        documentType: this.state.documentType\r\n                    }\r\n                });\r\n    }\r\n\r\n    selectOnChangeHandler = (e) =>{\r\n        this.setState({\r\n            documentType:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        { }\r\n        return (\r\n            <div className=\"container bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 mt-3\">\r\n                        <form onChange={this.radioBtnHandler} onSubmit={this.onFormSubmit}>\r\n                            <input type=\"file\" onChange={this.fileChangeHandler} name=\"pdfUpload\" className=\"d-block text-success \" accept=\"application/pdf\"></input>\r\n                            {\r\n                                this.state.uploadFile != null &&\r\n                                <div className=\"mt-4\">\r\n                                    <select name=\"documentType\" value={this.state.documentType} onChange={this.selectOnChangeHandler}>\r\n                                        <option value=\"Civil\">Civil</option>\r\n                                        <option value=\"Criminal\">Criminal</option>\r\n                                    </select>\r\n                                    <button className=\"d-block btn btn-sm mt-4 btn-info\" type=\"submit\">Upload Document</button>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-8 mt-0\">\r\n                        <PdfContent uploadFile={this.state.uploadFile}></PdfContent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpLoadDocumentPage;"]},"metadata":{},"sourceType":"module"}